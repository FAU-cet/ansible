---
-   name: set var openMPI version name
    ansible.builtin.set_fact:
        openMPIVersionName: "openmpi-{{ openMPIVersion }}"

-   name: create folder for download
    ansible.builtin.file:
        path: "{{ (installerTmpFolder, 'openmpi') | path_join }}"
        state: directory

-   name: download openMPI and unpack
    ansible.builtin.unarchive:
        src: "https://download.open-mpi.org/release/open-mpi/v{{ openMPIVersion[:3] }}/openmpi-{{ openMPIVersion }}.tar.bz2"
        dest: "{{ (installerTmpFolder, 'openmpi') | path_join }}"
        remote_src: yes

-   name: configure openmpi
    ansible.builtin.command:
        cmd: "./configure --prefix={{ (sharedSoftwarePath, 'openmpi', openMPIVersionName) | path_join }} --with-slurm --with-pmi --with-pmix --with-cuda --with-singularity --with-ucx"
        chdir: "{{ (installerTmpFolder, 'openmpi', openMPIVersionName) | path_join }}"
        creates: "{{ (installerTmpFolder, 'openmpi', openMPIVersionName, 'Makefile') | path_join }}"

-   name: make
    community.general.make:
        chdir: "{{ (installerTmpFolder, 'openmpi', openMPIVersionName) | path_join }}"

-   name: make install
    community.general.make:
        chdir: "{{ (installerTmpFolder, 'openmpi', openMPIVersionName) | path_join }}"
        target: install

#--with-slurm --with-pmi=/usr/include/slurm --with-pmi-libdir=/usr
#cmd: "./configure --prefix={{ (sharedSoftwarePath, 'openmpi', openMPIVersionName) | path_join }} --with-slurm --with-pmi --with-pmix --with-cuda --with-singularity --with-ucx --without-verbs --enable-orterun-prefix-by-default"
